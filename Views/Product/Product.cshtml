@model fleurDamour.Models.Product
@using Microsoft.EntityFrameworkCore
@{
    ViewData["Title"] = Model.NameProduct;
    Layout = "~/Views/Shared/_Layout.cshtml";

    var db = new FleurDamourContext();
    var categories = db.Categories.Include(c => c.Idproducts).Where(c => c.Idproducts.Any(p => p.Idproduct == Model.Idproduct)).ToList();
    List<Product> products = new();
    foreach (var category in categories)
    {
        var product = db.Products.Include(p => p.Idcategories).Where(p => p.Idcategories.Any(p => p.Idcategory == category.Idcategory)).ToList();
        products.AddRange(product);
    }
    string userName = HttpContextAccessor.HttpContext.Session.GetString("UserName");
    Account UserAcc = LoginState.UserAcc(userName);
}

<style>
    .popup {
    display: none;
    position: fixed;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background: #fff;
    padding: 0; /* Bỏ padding ở ngoài để dùng trong .popup-content */
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25); /* Bóng đổ đậm và sâu hơn */
    border-radius: 20px; /* Bo tròn mạnh hơn */
    width: 380px; /* Tăng kích thước cho sang trọng */
    overflow: hidden; /* Đảm bảo nội dung không tràn */
    z-index: 1000;
    animation: slideIn 0.4s ease-out; /* Hiệu ứng trượt lên mượt */
}

/* Hiệu ứng trượt lên */
@@keyframes slideIn {
    from {
        opacity: 0;
        transform: translate(-50%, -60%);
    }
    to {
        opacity: 1;
        transform: translate(-50%, -50%);
    }
}

.popup-content {
    padding: 30px;
    position: relative;
    background: #fff;
}

/* Header của popup */
.popup-content h3 {
    font-size: 1.9rem;
    font-weight: 700;
    color: #1a1a1a; /* Màu đen đậm sang trọng */
    margin-bottom: 20px;
    text-transform: uppercase; /* Chữ in hoa cho mạnh mẽ */
    letter-spacing: 1px;
}

/* Nội dung sản phẩm */
.popup-content p {
    font-size: 1.15rem;
    color: #4a4a4a; /* Xám đậm nhẹ nhàng */
    margin: 8px 0;
    font-weight: 500;
}

/* Label và Input */
.popup-content label {
    display: block;
    font-size: 1rem;
    color: #333;
    margin: 15px 0 8px;
    font-weight: 600;
    text-align: left;
}

.popup-content input[type="number"] {
    width: 100%; /* Full width cho đẹp */
    max-width: 100px;
    padding: 10px;
    font-size: 1.1rem;
    border: 2px solid #e0e0e0; /* Viền nhạt */
    border-radius: 8px;
    text-align: center;
    outline: none;
    transition: all 0.3s ease;
}

.popup-content input[type="number"]:focus {
    border-color: #ff6f61; /* Màu cam nhẹ nổi bật */
    box-shadow: 0 0 8px rgba(255, 111, 97, 0.3);
}

/* Nút Confirm và Close */
.popup-content button {
    margin-top: 25px;
    padding: 12px 30px;
    font-size: 1.1rem;
    font-weight: 600;
    border-radius: 50px; /* Nút hình viên thuốc */
    border: none;
    cursor: pointer;
    transition: all 0.3s ease;
}

/* Nút Confirm/Buy Now */
.popup-content .btn-primary,
.popup-content .btn-success {
    background: linear-gradient(135deg, #ff6f61, #ff3d2e); /* Gradient cam-đỏ nổi bật */
    color: #fff;
    width: 100%; /* Full width cho ấn tượng */
}

.popup-content .btn-primary:hover,
.popup-content .btn-success:hover {
    background: linear-gradient(135deg, #ff3d2e, #e62e1f);
    transform: scale(1.05); /* Phóng to nhẹ khi hover */
    box-shadow: 0 8px 20px rgba(255, 61, 46, 0.4);
}

/* Nút Close */
.popup-content .btn-secondary {
    background: transparent;
    color: #ff6f61;
    border: 2px solid #ff6f61;
    width: 100%;
    margin-top: 10px;
}

.popup-content .btn-secondary:hover {
    background: #ff6f61;
    color: #fff;
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(255, 111, 97, 0.3);
}

/* Nút đóng (Close Button) */
.close-btn {
    position: absolute;
    top: 15px;
    right: 15px;
    font-size: 1.8rem;
    color: #bbb;
    cursor: pointer;
    transition: all 0.3s ease;
}

.close-btn:hover {
    color: #ff6f61;
    transform: rotate(90deg); /* Xoay khi hover */
}

    .breadcumb-area {
        height: auto;
        padding: 120px 0;
        background-size: cover;
        background-position: center;
        position: relative;
    }

        .breadcumb-area::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.4);
            z-index: 1;
        }

    .featured-artist-content, .d-flex {
        position: relative;
        z-index: 2; /* Ensure buttons are above the overlay */
    }

    .featured-artist-thumb {
        max-width: 400px;
        margin: 0 auto;
        overflow: hidden;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
    }

        .featured-artist-thumb img {
            width: 100%;
            height: auto;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .featured-artist-thumb:hover img {
            transform: scale(1.05);
        }

    .featured-artist-content h2,
    .featured-artist-content p {
        font-family: 'Times New Roman', Times, serif;
        color: white;
        letter-spacing: 1.5px;
        position: relative;
        z-index: 2;
    }

    .featured-artist-content h2 {
        font-size: 2.8rem;
        font-weight: 400;
        text-transform: uppercase;
    }

    .featured-artist-content p {
        font-size: 1.3rem;
        font-weight: 300;
        line-height: 1.7;
    }

    .btn-custom {
        margin: 5px;
        font-size: 1.1rem;
        border-radius: 8px;
        transition: all 0.3s ease;
        background-color: transparent;
        border: 1px solid white;
        color: white;
        padding: 10px 20px;
    }

        .btn-custom:hover {
            background-color: #ffffff !important;
            color: #000000 !important;
            transform: translateY(-2px);
            border-color: #ffffff !important;
        }

    .page-product-content {
        display: flex;
        flex-wrap: wrap;
        padding: 20px;
        gap: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .page-product-content-left {
        flex: 1;
        padding: 15px;
        text-align: center;
    }

        .page-product-content-right h2,
        .page-product-content-left h2,
        .related-product-item h4,
        .related-product-item h6 {
            color: white;
        }

    .related-product-item {
        align-items: center;
        margin-bottom: 20px;
        padding: 15px;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .page-product-content-right {
        flex: 2;
        padding: 15px;
    }

    .quantity-text {
        color: white;
        font-size: 1.2rem;
        margin-top: 10px;
    }

    .price-text {
        font-weight: bold;
        font-size: 1.4rem;
    }

    .comment-content {
        background: #f9f9f9;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .comment {
        border-bottom: 1px solid #eee;
        padding: 15px 0;
    }

    .comment-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .comment-avatar {
        height: 40px;
        width: 40px;
        border-radius: 50%;
        border: 2px solid #ddd;
        object-fit: cover;
    }

    .comment-username {
        margin-left: 10px;
        font-size: 1.1rem;
        text-decoration: none;
        color: #333;
    }

    .comment-date {
        color: black;
        font-size: 0.95rem;
    }

    .comment-text {
        color: black;
        font-size: 1rem;
    }

    .comment-action {
        margin-top: 10px;
        text-align: right;
    }

    .delete-comment {
        color: #ff4444;
        text-decoration: none;
        font-size: 0.9rem;
    }

    .comment-form textarea {
        background: #fff;
        color: #333;
        border: 1px solid #ccc;
        border-radius: 8px;
        padding: 15px;
        resize: vertical;
        box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);
    }

    .comment-form button {
        background: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background 0.3s;
    }

    .login-prompt {
        text-align: center;
    }
</style>

<!-- Breadcumb Section -->
<section class="breadcumb-area bg-img bg-overlay" style="background-image: url('@Url.Content("~/img/image/3.png")');">
    <div class="container py-5">
        <div class="row align-items-center g-4 flex-wrap">
            <div class="col-12 col-md-5 col-lg-4 text-center">
                <div class="featured-artist-thumb">
                    <img src="@Model.ImgProduct" alt="Product Image">
                </div>
                <p class="quantity-text">Quantity: @Model.Quantity</p>
            </div>
            <div class="col-12 col-md-7 col-lg-8">
                <div class="featured-artist-content">
                    <h2 class="mb-3">@Model.NameProduct</h2>
                    <p>@Model.InfoProduct</p>
                    <p class="price-text">Price: @Model.Price VND</p>
                </div>
                <div class="d-flex flex-wrap gap-3 mt-4">
                    <button class="btn btn-primary" onclick="openPopup('addToCartPopup')">Add to Cart</button>
                    <button class="btn btn-success" onclick="openPopup('buyNowPopup')">Buy Now</button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Bottom Content Section -->
<section class="page-product-content-area section-padding-100 bg-dark">
    <div class="page-product-content">
        <div class="page-product-content-left">
            <h2>Related Products</h2>
            <div class="related-products-list">
                @foreach (var p in products.Take(5))
                {
                    <div class="related-product-item">
                        <div class="featured-artist-thumb">
                            <a asp-action="Product" asp-controller="Product" asp-route-id="@p.Idproduct">
                                <img src="@p.ImgProduct" alt="">
                            </a>
                        </div>
                        <div class="related-product-info">
                            <h4>@p.NameProduct</h4>
                            <h6>
                                Price: @p.Price VND<br />
                                Quantity: @p.Quantity
                            </h6>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="page-product-content-right">
            <h2>Comments</h2>
            <div class="comment-content">
                @{
                    var comments = db.Comments.Where(c => c.Idproduct == Model.Idproduct).ToList();
                }
                @foreach (Comment c in comments)
                {
                    <div class="comment">
                        <div class="comment-info">
                            @{
                                var userChat = db.Accounts.SingleOrDefault(a => a.Uid == c.Uid);
                            }
                            <a asp-action="Profile" asp-controller="Account" asp-route-id="@c.Uid" class="comment-username">
                                <img src="@userChat.PicAccount" alt="Avatar" class="comment-avatar" />
                                <strong>@userChat.AccountName</strong>
                            </a>
                            <span class="comment-date">- @c.DateComments: </span>
                            <span class="comment-text">@c.StrComments</span>
                        </div>
                        @if (LoginState.IsLogged(userName) && c.Uid == UserAcc.Uid)
                        {
                            <div class="comment-action">
                                <a asp-action="RemoveComment" asp-route-productID="@Model.Idproduct" asp-route-commentID="@c.Idcomments" class="delete-comment">Delete</a>
                            </div>
                        }
                    </div>
                }
                @if (LoginState.IsLogged(userName))
                {
                    <form asp-action="Comment" asp-controller="Product" method="post" class="comment-form">
                        <div class="form-group">
                            <textarea name="StrComments" class="form-control" rows="4" placeholder="Write your Comment"></textarea>
                            <input type="hidden" name="Idproduct" value="@Model.Idproduct" />
                        </div>
                        <button type="submit" class="btn oneMusic-btn">Submit Comment</button>
                    </form>
                }
                else
                {
                    <h4 class="login-prompt">You have to login to comment!</h4>
                }
            </div>
        </div>
    </div>
</section>

<!-- Popup Add to Cart -->
<div id="addToCartPopup" class="popup">
    <div class="popup-content">
        <h3>Add to Cart</h3>
        <p><strong>@Model.NameProduct</strong></p>
        <p>Price: @Model.Price VND</p>
        <label for="cartQuantity">Quantity:</label>
        <input type="number" id="cartQuantity" value="1" min="1" max="@Model.Quantity">
        <button class="btn btn-primary" onclick="confirmAddToCart('@Model.Idproduct')">Confirm</button>
        <button class="btn btn-secondary" onclick="closePopup('addToCartPopup')">Close</button>
    </div>
</div>

<!-- Popup Buy Now -->
<div id="buyNowPopup" class="popup">
    <div class="popup-content">
        <h3>Confirm Purchase</h3>
        <p><strong>@Model.NameProduct</strong></p>
        <p>Price: @Model.Price VND</p>
        <label for="buyQuantity">Quantity:</label>
        <input type="number" id="buyQuantity" value="1" min="1" max="@Model.Quantity">
        <button class="btn btn-success" onclick="confirmBuyNow('@Model.Idproduct')">Buy Now</button>
        <button class="btn btn-secondary" onclick="closePopup('buyNowPopup')">Close</button>
    </div>
</div>

<!-- Updated JavaScript -->
@section Scripts {
    <script>
        function openPopup(popupId) {
            console.log("Button clicked: " + popupId); // Debug
            let userName = '@Context.Session.GetString("UserName")';
            if (!userName) {
                alert("You need to log in to perform this action.");
                window.location.href = '@Url.Action("Login", "Account")';
                return;
            }
            document.getElementById(popupId).style.display = "block";
        }

        function confirmAddToCart(productId) {
            let quantity = parseInt(document.getElementById("cartQuantity").value);
            if (quantity < 1 || isNaN(quantity)) {
                alert("Invalid quantity.");
                return;
            }
            fetch(`/Product/AddToCart?id=${productId}&quantity=${quantity}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Product has been added to the cart!");
                        closePopup('addToCartPopup');
                    } else {
                        alert(data.message);
                    }
                })
                .catch(() => alert("An error occurred while adding to the cart."));
        }

        function confirmBuyNow(productId) {
            let quantity = parseInt(document.getElementById("buyQuantity").value);
            if (quantity < 1 || isNaN(quantity)) {
                alert("Invalid quantity.");
                return;
            }
            fetch(`/Product/BuyNow?id=${productId}&quantity=${quantity}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirectUrl;
                    } else {
                        alert(data.message);
                    }
                })
                .catch(() => alert("An error occurred while purchasing."));
        }

        function closePopup(popupId) {
            document.getElementById(popupId).style.display = "none";
        }
    </script>
}

<!-- Ensure Bootstrap is included in _Layout.cshtml -->
<!-- In <head> of _Layout.cshtml -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />

<!-- At the end of <body> in _Layout.cshtml -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>